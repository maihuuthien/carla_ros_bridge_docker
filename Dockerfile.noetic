FROM nvidia/cuda:11.6.1-cudnn8-devel-ubuntu20.04

ARG CARLA_VERSION=0.9.12
ARG ROS_BRIDGE_VERSION=${CARLA_VERSION}
ARG GID=1000
ARG UID=1000
ENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# add new sudo user
ENV USERNAME noetic
ENV HOME /home/$USERNAME
RUN groupadd -f -g ${GID} ${USERNAME}
RUN useradd -m $USERNAME -u ${UID} -g ${GID} && \
    echo "$USERNAME:$USERNAME" | chpasswd && \
    usermod --shell /bin/bash $USERNAME && \
    usermod -aG sudo $USERNAME && \
    mkdir /etc/sudoers.d && \
    echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME

# install package
RUN echo "Acquire::GzipIndexes \"false\"; Acquire::CompressionTypes::Order:: \"gz\";" > /etc/apt/apt.conf.d/docker-gzip-indexes
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    sudo \
    less \
    emacs \
    tmux \
    curl \
    wget \
    git \
    bash-completion \
    command-not-found \
    software-properties-common \
    xsel \
    coreutils \
    build-essential \
    pkg-config \
    xdg-user-dirs \
    python3-pip \
    python3-protobuf \
    python3-pexpect \
    pcl-tools \
    libomp5 \
    libgl1-mesa-dev \
    freeglut3-dev \
    mesa-utils \
    vulkan-tools \
    vulkan-utils \
    libvulkan-dev \
    libglfw3-dev \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

COPY config/nvidia_icd.json /usr/share/vulkan/icd.d/

ARG XDG_RUNTIME_DIR="/tmp/xdg_runtime_dir"
RUN mkdir -p ${XDG_RUNTIME_DIR} && chmod 777 ${XDG_RUNTIME_DIR}

RUN echo "export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/nvidia_icd.json" >> ~/.bashrc
RUN echo "export XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR}" >> ~/.bashrc

# ROS Noetic
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

# RUN apt-key adv --keyserver keyserver.ubuntu.com --keyserver-options http-proxy=${HTTP_PROXY} --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
COPY gpg/ros.asc .
RUN apt-key add ros.asc

RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-noetic-desktop-full \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-wstool \
    build-essential \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# CARLA Simulator

# RUN apt-key adv --keyserver keyserver.ubuntu.com --keyserver-options http-proxy=${HTTP_PROXY} --recv-keys 1AF1527DE64CB8D9
COPY gpg/carla.asc .
RUN apt-key add carla.asc

# It seems like their server has been down for quite some time, so I'm using a different source.
# RUN add-apt-repository "deb [arch=amd64] http://dist.carla.org/carla $(lsb_release -sc) main"
# RUN apt-get update && apt-get install -y --no-install-recommends \
#    carla-simulator=${CARLA_VERSION} \
#    && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/*

RUN wget --no-check-certificate https://carla-releases.s3.us-east-005.backblazeb2.com/Linux/CARLA_${CARLA_VERSION}.tar.gz
RUN mkdir /opt/carla-simulator && \
    tar -xzvf CARLA_${CARLA_VERSION}.tar.gz -C /opt/carla-simulator/ && \
    rm -f CARLA_${CARLA_VERSION}.tar.gz

# If the whl file below is not a supported wheel on this platform, use the egg instead
# RUN sudo pip install /opt/carla-simulator/PythonAPI/carla/dist/carla-${CARLA_VERSION}-cp37-cp37m-manylinux_2_27_x86_64.whl
ENV PYTHONPATH ${PYTHONPATH}:"/opt/carla-simulator/PythonAPI/carla/dist/carla-${CARLA_VERSION}-py3.7-linux-x86_64.egg"

# Select the video driver between offsreen and x11
# x11 is recommended for vulkan support
ENV SDL_VIDEODRIVER=x11

RUN sudo pip install --proxy=${HTTP_PROXY} --no-cache-dir -r /opt/carla-simulator/PythonAPI/examples/requirements.txt

# addtional ROS package
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-noetic-derived-object-msgs \
    ros-noetic-ackermann-msgs \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# addtional python package
RUN sudo pip install --proxy=${HTTP_PROXY} \
    transforms3d==0.3.1 \
    networkx==2.2 \
    pygame==2.5.2

RUN sudo -E rosdep init

USER $USERNAME
WORKDIR $HOME

RUN sudo rosdep fix-permissions
RUN rosdep update

SHELL ["/bin/bash", "-c"]

# build CARLA ROS bridge
RUN mkdir -p ~/catkin_ws/src && \
    source /opt/ros/noetic/setup.bash && \
    catkin_init_workspace ~/catkin_ws/src && \
    cd ~/catkin_ws/src && \
    wget --no-check-certificate https://github.com/carla-simulator/ros-bridge/archive/refs/tags/${ROS_BRIDGE_VERSION}.tar.gz && \
    tar -xzvf ${ROS_BRIDGE_VERSION}.tar.gz && \
    rm -f ${ROS_BRIDGE_VERSION}.tar.gz && \
    mv ros-bridge-${ROS_BRIDGE_VERSION} ros-bridge && \
	cd ros-bridge && \
    wget --no-check-certificate https://github.com/carla-simulator/ros-carla-msgs/archive/refs/tags/1.3.0.tar.gz && \
    tar -xzvf 1.3.0.tar.gz && \
    rm -f 1.3.0.tar.gz && \
	mv ros-carla-msgs-1.3.0 carla_msgs && \
    cd ~/catkin_ws && \
    catkin_make -DCMAKE_BUILD_TYPE=Release && \
    source ~/catkin_ws/devel/setup.bash

# build CARLA ScenarioRunner
RUN cd $HOME && \
    wget --no-check-certificate https://github.com/carla-simulator/scenario_runner/archive/refs/tags/v${CARLA_VERSION}.tar.gz && \
    tar -xzvf v${CARLA_VERSION}.tar.gz && \
    rm -f v${CARLA_VERSION}.tar.gz && \
    mv scenario_runner-${CARLA_VERSION} scenario_runner && \
    sudo pip install --proxy=${HTTP_PROXY} -r scenario_runner/requirements.txt

RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc && \
    echo "source ~/catkin_ws/devel/setup.bash" >> ~/.bashrc && \
    echo "export SCENARIO_RUNNER_PATH=$HOME/scenario_runner" >> ~/.bashrc
